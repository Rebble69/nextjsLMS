generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Library
model Book {
  isbn         Int                @id
  title        String
  description  String?
  thumbnailUrl String?
  lang         String?
  categories   CategoriesOnBook[]
  authors      AuthorsOnBook[]
}

model Category {
  id   Int    @id @default(autoincrement())
  name String

  books CategoriesOnBook[]

  @@unique([name])
  @@index([name])
}

model Author {
  id    Int             @id @default(autoincrement())
  name  String
  books AuthorsOnBook[]

  @@unique([name])
  @@index([name])
}

model CategoriesOnBook {
  book       Book     @relation(fields: [bookId], references: [isbn], onDelete: Cascade)
  bookId     Int
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId Int


  @@id([bookId, categoryId])
}

model AuthorsOnBook {
  book     Book   @relation(fields: [bookId], references: [isbn], onDelete: Cascade)
  bookId   Int
  author   Author @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId Int

  @@id([bookId, authorId])
}

// Auth
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String?   @default("user")
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
